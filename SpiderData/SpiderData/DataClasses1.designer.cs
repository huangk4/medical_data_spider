#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpiderData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SpiderData")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertHNdata(HNdata instance);
    partial void UpdateHNdata(HNdata instance);
    partial void DeleteHNdata(HNdata instance);
    partial void InsertZHdata(ZHdata instance);
    partial void UpdateZHdata(ZHdata instance);
    partial void DeleteZHdata(ZHdata instance);
    partial void InsertJSdata(JSdata instance);
    partial void UpdateJSdata(JSdata instance);
    partial void DeleteJSdata(JSdata instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SpiderDataConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<HNdata> HNdata
		{
			get
			{
				return this.GetTable<HNdata>();
			}
		}
		
		public System.Data.Linq.Table<ZHdata> ZHdata
		{
			get
			{
				return this.GetTable<ZHdata>();
			}
		}
		
		public System.Data.Linq.Table<JSdata> JSdata
		{
			get
			{
				return this.GetTable<JSdata>();
			}
		}
		
		public System.Data.Linq.Table<user> user
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HNdata")]
	public partial class HNdata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _产品中文名称;
		
		private string _产品英文名称;
		
		private string _产品注册号;
		
		private string _产品类别;
		
		private string _有效期起;
		
		private string _有效期止;
		
		private string _生产厂家;
		
		private string _注册地址;
		
		private string _规格型号;
		
		private string _注册类别;
		
		private string _产品性能结构及组成;
		
		private string _产品使用范围;
		
		private string _其他内容;
		
		private string _备注;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void On产品中文名称Changing(string value);
    partial void On产品中文名称Changed();
    partial void On产品英文名称Changing(string value);
    partial void On产品英文名称Changed();
    partial void On产品注册号Changing(string value);
    partial void On产品注册号Changed();
    partial void On产品类别Changing(string value);
    partial void On产品类别Changed();
    partial void On有效期起Changing(string value);
    partial void On有效期起Changed();
    partial void On有效期止Changing(string value);
    partial void On有效期止Changed();
    partial void On生产厂家Changing(string value);
    partial void On生产厂家Changed();
    partial void On注册地址Changing(string value);
    partial void On注册地址Changed();
    partial void On规格型号Changing(string value);
    partial void On规格型号Changed();
    partial void On注册类别Changing(string value);
    partial void On注册类别Changed();
    partial void On产品性能结构及组成Changing(string value);
    partial void On产品性能结构及组成Changed();
    partial void On产品使用范围Changing(string value);
    partial void On产品使用范围Changed();
    partial void On其他内容Changing(string value);
    partial void On其他内容Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    #endregion
		
		public HNdata()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品中文名称", DbType="VarChar(255)")]
		public string 产品中文名称
		{
			get
			{
				return this._产品中文名称;
			}
			set
			{
				if ((this._产品中文名称 != value))
				{
					this.On产品中文名称Changing(value);
					this.SendPropertyChanging();
					this._产品中文名称 = value;
					this.SendPropertyChanged("产品中文名称");
					this.On产品中文名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品英文名称", DbType="VarChar(MAX)")]
		public string 产品英文名称
		{
			get
			{
				return this._产品英文名称;
			}
			set
			{
				if ((this._产品英文名称 != value))
				{
					this.On产品英文名称Changing(value);
					this.SendPropertyChanging();
					this._产品英文名称 = value;
					this.SendPropertyChanged("产品英文名称");
					this.On产品英文名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品注册号", DbType="VarChar(MAX)")]
		public string 产品注册号
		{
			get
			{
				return this._产品注册号;
			}
			set
			{
				if ((this._产品注册号 != value))
				{
					this.On产品注册号Changing(value);
					this.SendPropertyChanging();
					this._产品注册号 = value;
					this.SendPropertyChanged("产品注册号");
					this.On产品注册号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品类别", DbType="VarChar(MAX)")]
		public string 产品类别
		{
			get
			{
				return this._产品类别;
			}
			set
			{
				if ((this._产品类别 != value))
				{
					this.On产品类别Changing(value);
					this.SendPropertyChanging();
					this._产品类别 = value;
					this.SendPropertyChanged("产品类别");
					this.On产品类别Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_有效期起", DbType="VarChar(MAX)")]
		public string 有效期起
		{
			get
			{
				return this._有效期起;
			}
			set
			{
				if ((this._有效期起 != value))
				{
					this.On有效期起Changing(value);
					this.SendPropertyChanging();
					this._有效期起 = value;
					this.SendPropertyChanged("有效期起");
					this.On有效期起Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_有效期止", DbType="VarChar(MAX)")]
		public string 有效期止
		{
			get
			{
				return this._有效期止;
			}
			set
			{
				if ((this._有效期止 != value))
				{
					this.On有效期止Changing(value);
					this.SendPropertyChanging();
					this._有效期止 = value;
					this.SendPropertyChanged("有效期止");
					this.On有效期止Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_生产厂家", DbType="VarChar(MAX)")]
		public string 生产厂家
		{
			get
			{
				return this._生产厂家;
			}
			set
			{
				if ((this._生产厂家 != value))
				{
					this.On生产厂家Changing(value);
					this.SendPropertyChanging();
					this._生产厂家 = value;
					this.SendPropertyChanged("生产厂家");
					this.On生产厂家Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_注册地址", DbType="VarChar(MAX)")]
		public string 注册地址
		{
			get
			{
				return this._注册地址;
			}
			set
			{
				if ((this._注册地址 != value))
				{
					this.On注册地址Changing(value);
					this.SendPropertyChanging();
					this._注册地址 = value;
					this.SendPropertyChanged("注册地址");
					this.On注册地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_规格型号", DbType="VarChar(MAX)")]
		public string 规格型号
		{
			get
			{
				return this._规格型号;
			}
			set
			{
				if ((this._规格型号 != value))
				{
					this.On规格型号Changing(value);
					this.SendPropertyChanging();
					this._规格型号 = value;
					this.SendPropertyChanged("规格型号");
					this.On规格型号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_注册类别", DbType="VarChar(MAX)")]
		public string 注册类别
		{
			get
			{
				return this._注册类别;
			}
			set
			{
				if ((this._注册类别 != value))
				{
					this.On注册类别Changing(value);
					this.SendPropertyChanging();
					this._注册类别 = value;
					this.SendPropertyChanged("注册类别");
					this.On注册类别Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品性能结构及组成", DbType="VarChar(MAX)")]
		public string 产品性能结构及组成
		{
			get
			{
				return this._产品性能结构及组成;
			}
			set
			{
				if ((this._产品性能结构及组成 != value))
				{
					this.On产品性能结构及组成Changing(value);
					this.SendPropertyChanging();
					this._产品性能结构及组成 = value;
					this.SendPropertyChanged("产品性能结构及组成");
					this.On产品性能结构及组成Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品使用范围", DbType="VarChar(MAX)")]
		public string 产品使用范围
		{
			get
			{
				return this._产品使用范围;
			}
			set
			{
				if ((this._产品使用范围 != value))
				{
					this.On产品使用范围Changing(value);
					this.SendPropertyChanging();
					this._产品使用范围 = value;
					this.SendPropertyChanged("产品使用范围");
					this.On产品使用范围Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_其他内容", DbType="VarChar(MAX)")]
		public string 其他内容
		{
			get
			{
				return this._其他内容;
			}
			set
			{
				if ((this._其他内容 != value))
				{
					this.On其他内容Changing(value);
					this.SendPropertyChanging();
					this._其他内容 = value;
					this.SendPropertyChanged("其他内容");
					this.On其他内容Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_备注", DbType="VarChar(MAX)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._备注 = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZHdata")]
	public partial class ZHdata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _产品名称;
		
		private string _产品英文名称;
		
		private string _注册证号;
		
		private string _产品类别;
		
		private string _有效期起;
		
		private string _有效期止;
		
		private string _发证日期;
		
		private string _发证机关;
		
		private string _单位名称;
		
		private string _注册地址;
		
		private string _规格型号;
		
		private string _注册类别;
		
		private string _管理类别;
		
		private string _产品性能结构及组成;
		
		private string _产品使用范围;
		
		private string _其他内容;
		
		private string _备注;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void On产品名称Changing(string value);
    partial void On产品名称Changed();
    partial void On产品英文名称Changing(string value);
    partial void On产品英文名称Changed();
    partial void On注册证号Changing(string value);
    partial void On注册证号Changed();
    partial void On产品类别Changing(string value);
    partial void On产品类别Changed();
    partial void On有效期起Changing(string value);
    partial void On有效期起Changed();
    partial void On有效期止Changing(string value);
    partial void On有效期止Changed();
    partial void On发证日期Changing(string value);
    partial void On发证日期Changed();
    partial void On发证机关Changing(string value);
    partial void On发证机关Changed();
    partial void On单位名称Changing(string value);
    partial void On单位名称Changed();
    partial void On注册地址Changing(string value);
    partial void On注册地址Changed();
    partial void On规格型号Changing(string value);
    partial void On规格型号Changed();
    partial void On注册类别Changing(string value);
    partial void On注册类别Changed();
    partial void On管理类别Changing(string value);
    partial void On管理类别Changed();
    partial void On产品性能结构及组成Changing(string value);
    partial void On产品性能结构及组成Changed();
    partial void On产品使用范围Changing(string value);
    partial void On产品使用范围Changed();
    partial void On其他内容Changing(string value);
    partial void On其他内容Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    #endregion
		
		public ZHdata()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品名称", DbType="VarChar(255)")]
		public string 产品名称
		{
			get
			{
				return this._产品名称;
			}
			set
			{
				if ((this._产品名称 != value))
				{
					this.On产品名称Changing(value);
					this.SendPropertyChanging();
					this._产品名称 = value;
					this.SendPropertyChanged("产品名称");
					this.On产品名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品英文名称", DbType="VarChar(255)")]
		public string 产品英文名称
		{
			get
			{
				return this._产品英文名称;
			}
			set
			{
				if ((this._产品英文名称 != value))
				{
					this.On产品英文名称Changing(value);
					this.SendPropertyChanging();
					this._产品英文名称 = value;
					this.SendPropertyChanged("产品英文名称");
					this.On产品英文名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_注册证号", DbType="VarChar(255)")]
		public string 注册证号
		{
			get
			{
				return this._注册证号;
			}
			set
			{
				if ((this._注册证号 != value))
				{
					this.On注册证号Changing(value);
					this.SendPropertyChanging();
					this._注册证号 = value;
					this.SendPropertyChanged("注册证号");
					this.On注册证号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品类别", DbType="VarChar(255)")]
		public string 产品类别
		{
			get
			{
				return this._产品类别;
			}
			set
			{
				if ((this._产品类别 != value))
				{
					this.On产品类别Changing(value);
					this.SendPropertyChanging();
					this._产品类别 = value;
					this.SendPropertyChanged("产品类别");
					this.On产品类别Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_有效期起", DbType="VarChar(255)")]
		public string 有效期起
		{
			get
			{
				return this._有效期起;
			}
			set
			{
				if ((this._有效期起 != value))
				{
					this.On有效期起Changing(value);
					this.SendPropertyChanging();
					this._有效期起 = value;
					this.SendPropertyChanged("有效期起");
					this.On有效期起Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_有效期止", DbType="VarChar(255)")]
		public string 有效期止
		{
			get
			{
				return this._有效期止;
			}
			set
			{
				if ((this._有效期止 != value))
				{
					this.On有效期止Changing(value);
					this.SendPropertyChanging();
					this._有效期止 = value;
					this.SendPropertyChanged("有效期止");
					this.On有效期止Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_发证日期", DbType="VarChar(255)")]
		public string 发证日期
		{
			get
			{
				return this._发证日期;
			}
			set
			{
				if ((this._发证日期 != value))
				{
					this.On发证日期Changing(value);
					this.SendPropertyChanging();
					this._发证日期 = value;
					this.SendPropertyChanged("发证日期");
					this.On发证日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_发证机关", DbType="VarChar(255)")]
		public string 发证机关
		{
			get
			{
				return this._发证机关;
			}
			set
			{
				if ((this._发证机关 != value))
				{
					this.On发证机关Changing(value);
					this.SendPropertyChanging();
					this._发证机关 = value;
					this.SendPropertyChanged("发证机关");
					this.On发证机关Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_单位名称", DbType="VarChar(255)")]
		public string 单位名称
		{
			get
			{
				return this._单位名称;
			}
			set
			{
				if ((this._单位名称 != value))
				{
					this.On单位名称Changing(value);
					this.SendPropertyChanging();
					this._单位名称 = value;
					this.SendPropertyChanged("单位名称");
					this.On单位名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_注册地址", DbType="VarChar(255)")]
		public string 注册地址
		{
			get
			{
				return this._注册地址;
			}
			set
			{
				if ((this._注册地址 != value))
				{
					this.On注册地址Changing(value);
					this.SendPropertyChanging();
					this._注册地址 = value;
					this.SendPropertyChanged("注册地址");
					this.On注册地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_规格型号", DbType="VarChar(255)")]
		public string 规格型号
		{
			get
			{
				return this._规格型号;
			}
			set
			{
				if ((this._规格型号 != value))
				{
					this.On规格型号Changing(value);
					this.SendPropertyChanging();
					this._规格型号 = value;
					this.SendPropertyChanged("规格型号");
					this.On规格型号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_注册类别", DbType="VarChar(255)")]
		public string 注册类别
		{
			get
			{
				return this._注册类别;
			}
			set
			{
				if ((this._注册类别 != value))
				{
					this.On注册类别Changing(value);
					this.SendPropertyChanging();
					this._注册类别 = value;
					this.SendPropertyChanged("注册类别");
					this.On注册类别Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_管理类别", DbType="VarChar(255)")]
		public string 管理类别
		{
			get
			{
				return this._管理类别;
			}
			set
			{
				if ((this._管理类别 != value))
				{
					this.On管理类别Changing(value);
					this.SendPropertyChanging();
					this._管理类别 = value;
					this.SendPropertyChanged("管理类别");
					this.On管理类别Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品性能结构及组成", DbType="VarChar(255)")]
		public string 产品性能结构及组成
		{
			get
			{
				return this._产品性能结构及组成;
			}
			set
			{
				if ((this._产品性能结构及组成 != value))
				{
					this.On产品性能结构及组成Changing(value);
					this.SendPropertyChanging();
					this._产品性能结构及组成 = value;
					this.SendPropertyChanged("产品性能结构及组成");
					this.On产品性能结构及组成Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品使用范围", DbType="VarChar(255)")]
		public string 产品使用范围
		{
			get
			{
				return this._产品使用范围;
			}
			set
			{
				if ((this._产品使用范围 != value))
				{
					this.On产品使用范围Changing(value);
					this.SendPropertyChanging();
					this._产品使用范围 = value;
					this.SendPropertyChanged("产品使用范围");
					this.On产品使用范围Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_其他内容", DbType="VarChar(255)")]
		public string 其他内容
		{
			get
			{
				return this._其他内容;
			}
			set
			{
				if ((this._其他内容 != value))
				{
					this.On其他内容Changing(value);
					this.SendPropertyChanging();
					this._其他内容 = value;
					this.SendPropertyChanged("其他内容");
					this.On其他内容Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_备注", DbType="VarChar(255)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._备注 = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JSdata")]
	public partial class JSdata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _产品名称;
		
		private string _单位名称;
		
		private string _注册证号;
		
		private string _管理类别;
		
		private string _规格型号;
		
		private string _有效日期;
		
		private string _发证日期;
		
		private string _发证机关;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void On产品名称Changing(string value);
    partial void On产品名称Changed();
    partial void On单位名称Changing(string value);
    partial void On单位名称Changed();
    partial void On注册证号Changing(string value);
    partial void On注册证号Changed();
    partial void On管理类别Changing(string value);
    partial void On管理类别Changed();
    partial void On规格型号Changing(string value);
    partial void On规格型号Changed();
    partial void On有效日期Changing(string value);
    partial void On有效日期Changed();
    partial void On发证日期Changing(string value);
    partial void On发证日期Changed();
    partial void On发证机关Changing(string value);
    partial void On发证机关Changed();
    #endregion
		
		public JSdata()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品名称", DbType="VarChar(MAX)")]
		public string 产品名称
		{
			get
			{
				return this._产品名称;
			}
			set
			{
				if ((this._产品名称 != value))
				{
					this.On产品名称Changing(value);
					this.SendPropertyChanging();
					this._产品名称 = value;
					this.SendPropertyChanged("产品名称");
					this.On产品名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_单位名称", DbType="VarChar(MAX)")]
		public string 单位名称
		{
			get
			{
				return this._单位名称;
			}
			set
			{
				if ((this._单位名称 != value))
				{
					this.On单位名称Changing(value);
					this.SendPropertyChanging();
					this._单位名称 = value;
					this.SendPropertyChanged("单位名称");
					this.On单位名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_注册证号", DbType="VarChar(MAX)")]
		public string 注册证号
		{
			get
			{
				return this._注册证号;
			}
			set
			{
				if ((this._注册证号 != value))
				{
					this.On注册证号Changing(value);
					this.SendPropertyChanging();
					this._注册证号 = value;
					this.SendPropertyChanged("注册证号");
					this.On注册证号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_管理类别", DbType="VarChar(MAX)")]
		public string 管理类别
		{
			get
			{
				return this._管理类别;
			}
			set
			{
				if ((this._管理类别 != value))
				{
					this.On管理类别Changing(value);
					this.SendPropertyChanging();
					this._管理类别 = value;
					this.SendPropertyChanged("管理类别");
					this.On管理类别Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_规格型号", DbType="VarChar(MAX)")]
		public string 规格型号
		{
			get
			{
				return this._规格型号;
			}
			set
			{
				if ((this._规格型号 != value))
				{
					this.On规格型号Changing(value);
					this.SendPropertyChanging();
					this._规格型号 = value;
					this.SendPropertyChanged("规格型号");
					this.On规格型号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_有效日期", DbType="VarChar(MAX)")]
		public string 有效日期
		{
			get
			{
				return this._有效日期;
			}
			set
			{
				if ((this._有效日期 != value))
				{
					this.On有效日期Changing(value);
					this.SendPropertyChanging();
					this._有效日期 = value;
					this.SendPropertyChanged("有效日期");
					this.On有效日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_发证日期", DbType="VarChar(MAX)")]
		public string 发证日期
		{
			get
			{
				return this._发证日期;
			}
			set
			{
				if ((this._发证日期 != value))
				{
					this.On发证日期Changing(value);
					this.SendPropertyChanging();
					this._发证日期 = value;
					this.SendPropertyChanged("发证日期");
					this.On发证日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_发证机关", DbType="VarChar(MAX)")]
		public string 发证机关
		{
			get
			{
				return this._发证机关;
			}
			set
			{
				if ((this._发证机关 != value))
				{
					this.On发证机关Changing(value);
					this.SendPropertyChanging();
					this._发证机关 = value;
					this.SendPropertyChanged("发证机关");
					this.On发证机关Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<byte> _admin;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnadminChanging(System.Nullable<byte> value);
    partial void OnadminChanged();
    #endregion
		
		public user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(255)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin", DbType="TinyInt")]
		public System.Nullable<byte> admin
		{
			get
			{
				return this._admin;
			}
			set
			{
				if ((this._admin != value))
				{
					this.OnadminChanging(value);
					this.SendPropertyChanging();
					this._admin = value;
					this.SendPropertyChanged("admin");
					this.OnadminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
